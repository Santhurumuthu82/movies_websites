{"ast":null,"code":"var _jsxFileName = \"D:\\\\backend\\\\client\\\\src\\\\components\\\\MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = ({\n  movie = [],\n  editMovie,\n  deleteMovie\n}) => {\n  _s();\n  const [editingId, setEditingId] = useState(null);\n  const [editedMovie, setEditedMovie] = useState({\n    Movie_Name: '',\n    Description: '',\n    Rating: ''\n  });\n  useEffect(() => {\n    console.log(\"Movies prop inside MovieList:\", movie);\n  }, [movie]);\n  const handleEdit = movie => {\n    setEditingId(movie.id);\n    setEditedMovie(movie);\n  };\n  const handleSave = () => {\n    if (editedMovie.Movie_Name && editedMovie.Description && !isNaN(editedMovie.Rating)) {\n      editMovie(editingId, editedMovie);\n      setEditingId(null);\n    } else {\n      alert(\"Please fill out all fields correctly.\");\n    }\n  };\n  const handleCancel = () => {\n    setEditingId(null); // Reset the editing state\n    setEditedMovie({\n      Movie_Name: '',\n      Description: '',\n      Rating: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: movies.length > 0 ? movies.map(movie =>\n    /*#__PURE__*/\n    // Changed 'movies' to 'movie' inside the map\n    _jsxDEV(\"div\", {\n      className: \"movie-item\",\n      children: editingId === movie.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editedMovie.Movie_Name,\n          placeholder: \"Movie Name\",\n          onChange: e => setEditedMovie({\n            ...editedMovie,\n            Movie_Name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editedMovie.Description,\n          placeholder: \"Description\",\n          onChange: e => setEditedMovie({\n            ...editedMovie,\n            Description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: editedMovie.Rating,\n          placeholder: \"Rating\",\n          onChange: e => setEditedMovie({\n            ...editedMovie,\n            Rating: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Movie Name: \", movie.Movie_Name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), \"  \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", movie.Description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), \"   \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", movie.Rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), \"             \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(movie),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteMovie(movie.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this)\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies to display.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"8pwGrj7B2h7QhCNv2fqjHOXYmo0=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MovieList","movie","editMovie","deleteMovie","_s","editingId","setEditingId","editedMovie","setEditedMovie","Movie_Name","Description","Rating","console","log","handleEdit","id","handleSave","isNaN","alert","handleCancel","children","movies","length","map","className","type","value","placeholder","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/backend/client/src/components/MovieList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst MovieList = ({ movie = [], editMovie, deleteMovie }) => {\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [editedMovie, setEditedMovie] = useState({ Movie_Name: '', Description: '', Rating: '' });\r\n\r\n  useEffect(() => {\r\n    console.log(\"Movies prop inside MovieList:\", movie);\r\n  }, [movie]);\r\n\r\n  const handleEdit = (movie) => {\r\n    setEditingId(movie.id);\r\n    setEditedMovie(movie);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (editedMovie.Movie_Name && editedMovie.Description && !isNaN(editedMovie.Rating)) {\r\n      editMovie(editingId, editedMovie);\r\n      setEditingId(null);\r\n    } else {\r\n      alert(\"Please fill out all fields correctly.\");\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setEditingId(null); // Reset the editing state\r\n    setEditedMovie({ Movie_Name: '', Description: '', Rating: '' });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {movies.length > 0 ? (\r\n        movies.map((movie) => (   // Changed 'movies' to 'movie' inside the map\r\n          <div key={movie.id} className=\"movie-item\">\r\n            {editingId === movie.id ? (\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  value={editedMovie.Movie_Name}\r\n                  placeholder=\"Movie Name\"\r\n                  onChange={(e) => setEditedMovie({ ...editedMovie, Movie_Name: e.target.value })}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  value={editedMovie.Description}\r\n                  placeholder=\"Description\"\r\n                  onChange={(e) => setEditedMovie({ ...editedMovie, Description: e.target.value })}\r\n                />\r\n                <input\r\n                  type=\"number\"\r\n                  value={editedMovie.Rating}\r\n                  placeholder=\"Rating\"\r\n                  onChange={(e) => setEditedMovie({ ...editedMovie, Rating: e.target.value })}\r\n                />\r\n                <button onClick={handleSave}>Save</button>\r\n                <button onClick={handleCancel}>Cancel</button>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <h2>Movie Name: {movie.Movie_Name}</h2>  {/* Changed to 'movie' */}\r\n                <p>Description: {movie.Description}</p>   {/* Changed to 'movie' */}\r\n                <p>Rating: {movie.Rating}</p>             {/* Changed to 'movie' */}\r\n                <button onClick={() => handleEdit(movie)}>Edit</button>\r\n                <button onClick={() => deleteMovie(movie.id)}>Delete</button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No movies to display.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}